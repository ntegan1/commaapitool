#!/bin/bash

set -euo pipefail

whereami="$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)"
out_dir="${whereami}/../out"
include_dir="${whereami}/../include"
credentials_dir="${whereami}/../etc/credentials"
source "${include_dir}/commaapi.sh"

function urlparsepath() {
  python3 -c 'import urllib.parse; import sys; print(urllib.parse.urlparse(sys.stdin.read()).path)'
}
function standardize_uploaded_path() {
  uploadedpath="$(cat)"
  filename="$(basename "${uploadedpath}")"
  segmentnum="$(basename "$(dirname "${uploadedpath}")")"
  standardized_path="${route}--${segmentnum}/${filename}"
  echo "${standardized_path}"
}
function print_qlogs() {
  echo "${result}" | jq -r '.qlogs[]' | \
    while read -r line; do
      #/qlog/a152dad3c3368320/2023-01-21--15-09-41/9/qlog.bz2
      uploadedpath="$(echo "${line}" | urlparsepath)"
      filename="$(echo "${uploadedpath}" | standardize_uploaded_path)"
      filename="$(echo "$filename" | sed 's/qlog\.bz2$/qlog/g')"
      filename="$(echo "$filename" | sed 's/\//--/g')"
      echo $filename
      continue
      outfilepath="${out_dir}/${filename}"
      test -f "${outfilepath}" && continue
      true
      wget "${line}" -O "${outfilepath}" &
    done
}
function print_qcameras() {
  echo "${result}" | jq -r '.qcameras[]' | \
    while read -r line; do
      #/qlog/a152dad3c3368320/2023-01-21--15-09-41/9/qcamera.ts
      uploadedpath="$(echo "${line}" | urlparsepath)"
      filename="$(echo "${uploadedpath}" | standardize_uploaded_path)"
      filename="$(echo "$filename" | sed 's/\//--/g')"
      echo $filename
      continue
      outfilepath="${out_dir}/${filename}"
      test -f "${outfilepath}" && continue
      true
      wget "${line}" -O "${outfilepath}" &
    done
}
function print_fcameras() {
  echo "${result}" | jq -r '.cameras[]' | \
    while read -r line; do
      #/commadata2/a152dad3c3368320/2023-01-21--15-09-41/0/fcamera.hevc
      uploadedpath="$(echo "${line}" | urlparsepath)"
      filename="$(echo "${uploadedpath}" | standardize_uploaded_path)"
      filename="$(echo "$filename" | sed 's/\//--/g')"
      #echo "$line"
      echo $filename
      continue
      outfilepath="${out_dir}/${filename}"
      test -f "${outfilepath}" && continue
      true
      wget "${line}" -O "${outfilepath}" &
    done
}
function print_ecameras() {
  echo "${result}" | jq -r '.ecameras[]' | \
    while read -r line; do
      uploadedpath="$(echo "${line}" | urlparsepath)"
      filename="$(echo "${uploadedpath}" | standardize_uploaded_path)"
      filename="$(echo "$filename" | sed 's/\//--/g')"
      echo $filename
      continue
      outfilepath="${out_dir}/${filename}"
      test -f "${outfilepath}" && continue
      true
      wget "${line}" -O "${outfilepath}" &
    done
}
function print_dcameras() {
  echo "${result}" | jq -r '.dcameras[]' | \
    while read -r line; do
      uploadedpath="$(echo "${line}" | urlparsepath)"
      filename="$(echo "${uploadedpath}" | standardize_uploaded_path)"
      filename="$(echo "$filename" | sed 's/\//--/g')"
      echo $filename
      continue
      #echo $filename
      outfilepath="${out_dir}/${filename}"
      test -f "${outfilepath}" && continue
      true
      wget "${line}" -O "${outfilepath}" &
    done
}
function print_logs() {
  echo "${result}" | jq -r '.logs[]' | \
    while read -r line; do
      uploadedpath="$(echo "${line}" | urlparsepath)"
      filename="$(echo "${uploadedpath}" | standardize_uploaded_path)"
      filename="$(echo "$filename" | sed 's/rlog\.bz2$/rlog/g')"
      filename="$(echo "$filename" | sed 's/\//--/g')"
      echo $filename
      continue
      #echo $filename
      outfilepath="${out_dir}/${filename}"
      test -f "${outfilepath}" && continue
      true
      wget "${line}" -O "${outfilepath}" &
    done
}

jwt="$(cat "${credentials_dir}/jwt")"
dongle="$(cat "${credentials_dir}/dongle")"

route="$1"
routefull="${dongle}|${route}"

result="$(request_uploaded_files_for_route "${jwt}" "${routefull}")"


print_qlogs
print_logs
print_qcameras
print_fcameras
print_ecameras
print_dcameras

# comm -32 <(commaapilistroutefilesondevice "${route}" | sort) <(commaapilistroutefilesuploaded "${route}" | sort)
